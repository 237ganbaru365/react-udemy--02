{"ast":null,"code":"var _jsxFileName = \"/Users/fumina/Documents/project/practice/react-udemy__02/shopping-cart/src/components/Meals/AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport AddMeal from \"./AddMeal\";\nimport classes from \"./AvailableMeals.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const fetchMealsHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(\"https://react-http-3be24-default-rtdb.firebaseio.com/meals\");\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json();\n      const loadedMeals = [];\n\n      for (const key in data) {\n        loadedMeals.push({\n          id: key,\n          name: data[key].name,\n          description: data[key].description,\n          price: data[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchMealsHandler();\n  }, [fetchMealsHandler]);\n\n  async function addMealHandler(meal) {\n    const response = await fetch(\"https://react-http-3be24-default-rtdb.firebaseio.com/meals.json\", {\n      method: \"POST\",\n      body: JSON.stringify(meal)\n    });\n    const data = await response.json();\n    console.log(data);\n  }\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this));\n\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Found no meals.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 17\n  }, this);\n\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (meals.length > 0) {\n    content = mealsList;\n  }\n\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(AddMeal, {\n        onAddMeal: addMealHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.meals,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"2s+svWuY+3jFc1bi3f34bPorEY8=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["/Users/fumina/Documents/project/practice/react-udemy__02/shopping-cart/src/components/Meals/AvailableMeals.js"],"names":["React","useState","useCallback","useEffect","Card","MealItem","AddMeal","classes","AvailableMeals","meals","setMeals","isLoading","setIsLoading","error","setError","fetchMealsHandler","response","fetch","ok","Error","data","json","loadedMeals","key","push","id","name","description","price","message","addMealHandler","meal","method","body","JSON","stringify","console","log","mealsList","map","content","length"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\n\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport AddMeal from \"./AddMeal\";\n\nimport classes from \"./AvailableMeals.module.css\";\n\nconst AvailableMeals = () => {\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const fetchMealsHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        \"https://react-http-3be24-default-rtdb.firebaseio.com/meals\"\n      );\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json();\n\n      const loadedMeals = [];\n\n      for (const key in data) {\n        loadedMeals.push({\n          id: key,\n          name: data[key].name,\n          description: data[key].description,\n          price: data[key].price,\n        });\n      }\n      setMeals(loadedMeals);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchMealsHandler();\n  }, [fetchMealsHandler]);\n\n  async function addMealHandler(meal) {\n    const response = await fetch(\n      \"https://react-http-3be24-default-rtdb.firebaseio.com/meals.json\",\n      {\n        method: \"POST\",\n        body: JSON.stringify(meal),\n      }\n    );\n    const data = await response.json();\n    console.log(data);\n  }\n\n  const mealsList = meals.map((meal) => (\n    <MealItem\n      key={meal.id}\n      id={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n\n  let content = <p>Found no meals.</p>;\n\n  if (isLoading) {\n    content = <p>Loading...</p>;\n  }\n\n  if (meals.length > 0) {\n    content = mealsList;\n  }\n\n  if (error) {\n    content = <p>{error}</p>;\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMeal onAddMeal={addMealHandler} />\n      </section>\n      <section className={classes.meals}>\n        <Card>\n          <ul>{content}</ul>\n        </Card>\n      </section>\n    </React.Fragment>\n  );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}