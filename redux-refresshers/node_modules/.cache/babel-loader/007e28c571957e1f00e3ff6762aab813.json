{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialCartState = {\n  totalItems: 0,\n  isOpenCart: false,\n  cartItems: [{\n    quantity: 0,\n    price: 0\n  }]\n};\nconst CartSlice = createSlice({\n  name: \"cart\",\n  initialState: initialCartState,\n  reducers: {\n    itemIncrement(state) {\n      state.item++;\n    },\n\n    itemDecrement(state) {\n      state.item--;\n    },\n\n    addCart(state) {\n      state.item++;\n      state.totalItems += state.item;\n    },\n\n    totalItems(state) {\n      state.totalItems = [];\n    },\n\n    openCart(state) {\n      state.isOpenCart = !state.isOpenCart;\n    }\n\n  }\n});\nexport const cartAction = CartSlice.actions;\nexport default CartSlice.reducer;","map":{"version":3,"sources":["/Users/fumina/Documents/project/practice/react-udemy__02/redux-refresshers/src/store/cart.js"],"names":["createSlice","initialCartState","totalItems","isOpenCart","cartItems","quantity","price","CartSlice","name","initialState","reducers","itemIncrement","state","item","itemDecrement","addCart","openCart","cartAction","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,UAAU,EAAE,CADW;AAEvBC,EAAAA,UAAU,EAAE,KAFW;AAGvBC,EAAAA,SAAS,EAAE,CACT;AACEC,IAAAA,QAAQ,EAAE,CADZ;AAEEC,IAAAA,KAAK,EAAE;AAFT,GADS;AAHY,CAAzB;AAWA,MAAMC,SAAS,GAAGP,WAAW,CAAC;AAC5BQ,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAER,gBAFc;AAG5BS,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aAAa,CAACC,KAAD,EAAQ;AACnBA,MAAAA,KAAK,CAACC,IAAN;AACD,KAHO;;AAIRC,IAAAA,aAAa,CAACF,KAAD,EAAQ;AACnBA,MAAAA,KAAK,CAACC,IAAN;AACD,KANO;;AAORE,IAAAA,OAAO,CAACH,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACC,IAAN;AACAD,MAAAA,KAAK,CAACV,UAAN,IAAoBU,KAAK,CAACC,IAA1B;AACD,KAVO;;AAWRX,IAAAA,UAAU,CAACU,KAAD,EAAQ;AAChBA,MAAAA,KAAK,CAACV,UAAN,GAAmB,EAAnB;AACD,KAbO;;AAcRc,IAAAA,QAAQ,CAACJ,KAAD,EAAQ;AACdA,MAAAA,KAAK,CAACT,UAAN,GAAmB,CAACS,KAAK,CAACT,UAA1B;AACD;;AAhBO;AAHkB,CAAD,CAA7B;AAuBA,OAAO,MAAMc,UAAU,GAAGV,SAAS,CAACW,OAA7B;AAEP,eAAeX,SAAS,CAACY,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialCartState = {\n  totalItems: 0,\n  isOpenCart: false,\n  cartItems: [\n    {\n      quantity: 0,\n      price: 0,\n    },\n  ],\n};\n\nconst CartSlice = createSlice({\n  name: \"cart\",\n  initialState: initialCartState,\n  reducers: {\n    itemIncrement(state) {\n      state.item++;\n    },\n    itemDecrement(state) {\n      state.item--;\n    },\n    addCart(state) {\n      state.item++;\n      state.totalItems += state.item;\n    },\n    totalItems(state) {\n      state.totalItems = [];\n    },\n    openCart(state) {\n      state.isOpenCart = !state.isOpenCart;\n    },\n  },\n});\n\nexport const cartAction = CartSlice.actions;\n\nexport default CartSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}