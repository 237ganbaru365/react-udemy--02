{"ast":null,"code":"var _jsxFileName = \"/Users/fumina/Documents/project/practice/react-udemy__02/redux-refresshers/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const isOpenCart = useSelector(state => state.cart.isOpenCart);\n  const cart = useSelector(state => state.cart); //every time app component render, the initial value will store the database, that would be problem because empty data will update all exsiting data every single time when app component render, so we need fix it\n\n  useEffect(() => {\n    const sendCartData = async () => {\n      fetch(\"https://react-http-3be24-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n    };\n  }, [cart]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [isOpenCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"weh+xpaNeEsocq0dNDLQwLnXTi0=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/fumina/Documents/project/practice/react-udemy__02/redux-refresshers/src/App.js"],"names":["useEffect","useSelector","Cart","Layout","Products","App","isOpenCart","state","cart","sendCartData","fetch","method","body","JSON","stringify"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,UAAU,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,UAAvB,CAA9B;AACA,QAAME,IAAI,GAAGP,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAxB,CAFa,CAIb;;AACAR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,YAAY,GAAG,YAAY;AAC/BC,MAAAA,KAAK,CAAC,gEAAD,EAAmE;AACtEC,QAAAA,MAAM,EAAE,KAD8D;AAEtEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;AAFgE,OAAnE,CAAL;AAID,KALD;AAMD,GAPQ,EAON,CAACA,IAAD,CAPM,CAAT;AASA,sBACE,QAAC,MAAD;AAAA,eACGF,UAAU,iBAAI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADjB,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GApBQD,G;UACYJ,W,EACNA,W;;;KAFNI,G;AAsBT,eAAeA,GAAf","sourcesContent":["import { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\n\nfunction App() {\n  const isOpenCart = useSelector((state) => state.cart.isOpenCart);\n  const cart = useSelector((state) => state.cart);\n\n  //every time app component render, the initial value will store the database, that would be problem because empty data will update all exsiting data every single time when app component render, so we need fix it\n  useEffect(() => {\n    const sendCartData = async () => {\n      fetch(\"https://react-http-3be24-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart),\n      });\n    };\n  }, [cart]);\n\n  return (\n    <Layout>\n      {isOpenCart && <Cart />}\n      <Products />\n    </Layout>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}